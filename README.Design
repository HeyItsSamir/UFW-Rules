Design
------
The design of ufw is pretty straightforward.  It's object oriented and consists
of basically two types of objects:

ufwFrontend: 	user-interface
ufwBackend:	application logic

ufwBackend is an interface that any number of backends will inherit from, which
allows for using ufw with any pre-existing or future firewall application. The
reference backend, iptBackend, uses simple 'iptables' and 'iptables-restore'
commands and is suitable for a host-based firewall use-case.  It is envisioned
that other backends will be written as the use-cases for ufw grow.  Perhaps a
swBackend (for shorewall) or pfBackend (for OpenBSD PF).

ufwFrontend uses with the ufwBackend interface and provides the UI.  Currently
ufwFrontend is a CLI, but GUI applications could build on top of ufw by
either interacting with the CLI or by creating another frontend.

Implementation
--------------
The application is written in python, just because it is so easy to work with.
:)
