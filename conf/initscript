#!/bin/sh -e

### BEGIN INIT INFO
# Provides:          ufw
# Required-Start:    mountall.sh
# Required-Stop:     
# Default-Start:     S
# Default-Stop:      
# Short-Description: start firewall
### END INIT INFO

PATH="/sbin:/bin:/usr/sbin:/usr/bin"

[ -x #PREFIX#/sbin/ufw ] || exit 0

. /lib/lsb/init-functions

if [ -s #CONFIG_PREFIX#/default/ufw ]; then
	. #CONFIG_PREFIX#/default/ufw
else
	log_failure_msg "Could not find #CONFIG_PREFIX#/default/ufw (aborting)"
	exit 1
fi

BEFORE_RULES="#CONFIG_PREFIX#/ufw/before.rules"
AFTER_RULES="#CONFIG_PREFIX#/ufw/after.rules"
IN_RULES="#STATE_PREFIX#/user.rules"

case "$1" in
start)
	if iptables -L ufw-user-input -n >/dev/null 2>&1 ; then
		# if firewall loaded, tell to reload instead
		log_warning_msg "Firewall already started, use 'force-reload'"
		exit 0
	fi
	if [ "$ENABLED" = "yes" ] || [ "$ENABLED" = "YES" ]; then
		log_daemon_msg "Starting firewall:" "ufw"
		if [ ! -z "$IPT_SYSCTL" ] && [ -s "$IPT_SYSCTL" ]; then
			log_action_begin_msg "  Loading $IPT_SYSCTL"
			sysctl -q -p $IPT_SYSCTL
			log_action_end_msg $?
		fi
		for m in $IPT_MODULES
		do
			log_action_begin_msg "  Loading $m"
			modprobe $m
			log_action_end_msg $?
		done
		log_action_begin_msg "  Loading rules"

		# flush the chains
		iptables -F
		iptables -X

		# setup built-in chains' default policy
		iptables -P INPUT $DEFAULT_INPUT_POLICY
		iptables -P OUTPUT $DEFAULT_OUTPUT_POLICY
		iptables -P FORWARD $DEFAULT_FORWARD_POLICY

		# setup some other chains that can be used later
		iptables -N ufw-not-local

		# setup ufw-before-* chains
		iptables -N ufw-before-input
		iptables -N ufw-before-output
		iptables -N ufw-before-forward
		iptables -A INPUT -j ufw-before-input
		iptables -A OUTPUT -j ufw-before-output
		iptables -A FORWARD -j ufw-before-forward
		if [ -s "$BEFORE_RULES" ]; then
			if ! iptables-restore -n < $BEFORE_RULES ; then
				log_warning_msg "   Problem running 'rules.before'"
				error="yes"
			fi
		else
			log_warning_msg "   Couldn't find '$BEFORE_RULES'"
			
		fi

		# setup ufw-user chain
		if [ -s "$IN_RULES" ]; then
			iptables -N ufw-user-input
			iptables -N ufw-user-output
			iptables -N ufw-user-forward
			iptables -A ufw-before-input -j ufw-user-input
			iptables -A ufw-before-output -j ufw-user-output
			iptables -A ufw-before-forward -j ufw-user-forward
			if ! iptables-restore -n < $IN_RULES ; then
				log_warning_msg "   Problem running 'rules.before'"
				error="yes"
			fi
			# don't include the RETURN lines here, as they will
			# be in the IN_RULES file
		fi

		# now return from the chain
		iptables -A ufw-before-input -j RETURN
		iptables -A ufw-before-output -j RETURN
		iptables -A ufw-before-forward -j RETURN
		
		# setup ufw-after-* chains
		iptables -N ufw-after-input
		iptables -N ufw-after-output
		iptables -N ufw-after-forward
		iptables -A INPUT -j ufw-after-input
		iptables -A OUTPUT -j ufw-after-output
		iptables -A FORWARD -j ufw-after-forward
		if [ -s "$AFTER_RULES" ]; then
			if ! iptables-restore -n < $AFTER_RULES ; then
				log_warning_msg "   Problem running 'rules.after'"
				error="yes"
			fi
		else
			log_warning_msg "    Couldn't find '$AFTER_RULES'"
		fi
		iptables -A ufw-after-input -j RETURN
		iptables -A ufw-after-output -j RETURN
		iptables -A ufw-after-forward -j RETURN

		if [ "$error" = "yes" ]; then
			log_action_end_msg 1
			log_failure_msg "   Error(s) in starting firewall"
			exit 1
		else
			log_action_end_msg 0
		fi
	else
		log_warning_msg "    Skipping firewall (not enabled)"
	fi
	;;
stop)
	log_warning_msg "Please use 'ufw disable' to stop"
	;;
restart)
	if [ "$ENABLED" = "yes" ] || [ "$ENABLED" = "YES" ]; then
		log_action_begin_msg "Restarting firewall"
		#PREFIX#/sbin/ufw disable >/dev/null 2>/dev/null
		#PREFIX#/sbin/ufw enable >/dev/null 2>/dev/null
		log_action_end_msg $?
	else
		log_warning_msg "Skipping restart (not enabled)"
	fi
	;;
force-reload)
	log_action_begin_msg "Forcibly reloading firewall"
	#PREFIX#/sbin/ufw disable >/dev/null 2>/dev/null
	#PREFIX#/sbin/ufw enable >/dev/null 2>/dev/null
	log_action_end_msg $?
	;;
*)
	echo "Usage: /etc/init.d/ufw {start|stop|restart|force-reload}"
	exit 1
	;;
esac

exit 0

